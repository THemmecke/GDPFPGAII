-- VHDL netlist generated by SCUBA ispLever_v61_SP1_Build (17)
-- Module  Version: 4.1
--C:\ispTOOLS6_1_STRT\ispfpga\bin\nt\scuba.exe -w -lang vhdl -synth synplify -bus_exp 7 -bb -arch mg5g00 -type ebfifo -pfu_fifo -depth 4 -width 7 -depth 4 -no_enable -pe -1 -pf -1 -e 

-- Sat Jun 16 11:26:55 2007
-- modified for 8bit width by TH 2009-10-06

library IEEE;
use IEEE.std_logic_1164.all;
-- synopsys translate_off
library xp;
use xp.components.all;
-- synopsys translate_on

entity ps2_fifo is
    port (
        Data: in  std_logic_vector(7 downto 0); 
        Clock: in  std_logic; 
        WrEn: in  std_logic; 
        RdEn: in  std_logic; 
        Reset: in  std_logic; 
        Q: out  std_logic_vector(7 downto 0); 
        Empty: out  std_logic; 
        Full: out  std_logic);
end ps2_fifo;

architecture Structure of ps2_fifo is

    -- internal signal declarations
    signal invout_1: std_logic;
    signal invout_0: std_logic;
    signal rden_i_inv: std_logic;
    signal fcnt_en: std_logic;
    signal empty_i: std_logic;
    signal empty_d: std_logic;
    signal full_i: std_logic;
    signal full_d: std_logic;
    signal ifcount_0: std_logic;
    signal ifcount_1: std_logic;
    signal ifcount_2: std_logic;
    signal co1: std_logic;
    signal cnt_con: std_logic;
    signal co0: std_logic;
    signal rden_i: std_logic;
    signal co0_1: std_logic;
    signal cmp_le_1: std_logic;
    signal cmp_le_1_c: std_logic;
    signal wren_i: std_logic;
    signal fcount_0: std_logic;
    signal fcount_1: std_logic;
    signal cmp_ge_d1: std_logic;
    signal co0_2: std_logic;
    signal wren_i_inv: std_logic;
    signal fcount_2: std_logic;
    signal iwcount_0: std_logic;
    signal iwcount_1: std_logic;
    signal iwcount_2: std_logic;
    signal co1_1: std_logic;
    signal wcount_2: std_logic;
    signal co0_3: std_logic;
    signal ircount_0: std_logic;
    signal ircount_1: std_logic;
    signal scuba_vhi: std_logic;
    signal ircount_2: std_logic;
    signal co1_2: std_logic;
    signal rcount_2: std_logic;
    signal co0_4: std_logic;
    signal rdataout7: std_logic;
    signal rdataout6: std_logic;
    signal rdataout5: std_logic;
    signal rdataout4: std_logic;
    signal rdataout3: std_logic;
    signal rdataout2: std_logic;
    signal rdataout1: std_logic;
    signal rdataout0: std_logic;
    signal rcount_0: std_logic;
    signal rcount_1: std_logic;
    signal dec_wre3: std_logic;
    signal wcount_0: std_logic;
    signal wcount_1: std_logic;
    signal scuba_vlo: std_logic;

    -- local component declarations
    component AGEB2
        port (A1: in  std_logic; A0: in  std_logic; B1: in  std_logic; 
            B0: in  std_logic; CI: in  std_logic; GE: out  std_logic);
    end component;
    component ALEB2
        port (A1: in  std_logic; A0: in  std_logic; B1: in  std_logic; 
            B0: in  std_logic; CI: in  std_logic; LE: out  std_logic);
    end component;
    component AND2
        port (A: in  std_logic; B: in  std_logic; Z: out  std_logic);
    end component;
    component CB2
        port (CI: in  std_logic; PC1: in  std_logic; PC0: in  std_logic; 
            CON: in  std_logic; CO: out  std_logic; NC1: out  std_logic; 
            NC0: out  std_logic);
    end component;
    component CU2
        port (CI: in  std_logic; PC1: in  std_logic; PC0: in  std_logic; 
            CO: out  std_logic; NC1: out  std_logic; NC0: out  std_logic);
    end component;
    component DPR16X2B
        port (DI0: in  std_logic; DI1: in  std_logic; WCK: in  std_logic; 
            WRE: in  std_logic; RAD0: in  std_logic; RAD1: in  std_logic; 
            RAD2: in  std_logic; RAD3: in  std_logic; 
            WAD0: in  std_logic; WAD1: in  std_logic; 
            WAD2: in  std_logic; WAD3: in  std_logic; 
            WDO0: out  std_logic; WDO1: out  std_logic; 
            RDO0: out  std_logic; RDO1: out  std_logic);
    end component;
    component FADD2
        port (A1: in  std_logic; A0: in  std_logic; B1: in  std_logic; 
            B0: in  std_logic; CI: in  std_logic; COUT1: out  std_logic; 
            COUT0: out  std_logic; S1: out  std_logic; 
            S0: out  std_logic);
    end component;
    component FD1P3DX
        port (D: in  std_logic; SP: in  std_logic; CK: in  std_logic; 
            CD: in  std_logic; Q: out  std_logic);
    end component;
    component FD1S3BX
        port (D: in  std_logic; CK: in  std_logic; PD: in  std_logic; 
            Q: out  std_logic);
    end component;
    component FD1S3DX
        port (D: in  std_logic; CK: in  std_logic; CD: in  std_logic; 
            Q: out  std_logic);
    end component;
    component INV
        port (A: in  std_logic; Z: out  std_logic);
    end component;
    component ROM16X1
    -- synopsys translate_off
        generic (initval : in String);
    -- synopsys translate_on
        port (AD3: in  std_logic; AD2: in  std_logic; AD1: in  std_logic; 
            AD0: in  std_logic; DO0: out  std_logic);
    end component;
    component VHI
        port (Z: out  std_logic);
    end component;
    component VLO
        port (Z: out  std_logic);
    end component;
    component XOR2
        port (A: in  std_logic; B: in  std_logic; Z: out  std_logic);
    end component;
    attribute initval : string; 
    attribute initval of LUT4_1 : label is "0x3232";
    attribute initval of LUT4_0 : label is "0x3232";
    attribute syn_keep : boolean;

begin
    -- component instantiation statements
    AND2_t4: AND2
        port map (A=>WrEn, B=>invout_1, Z=>wren_i);

    INV_3: INV
        port map (A=>full_i, Z=>invout_1);

    AND2_t3: AND2
        port map (A=>RdEn, B=>invout_0, Z=>rden_i);

    INV_2: INV
        port map (A=>empty_i, Z=>invout_0);

    AND2_t2: AND2
        port map (A=>wren_i, B=>rden_i_inv, Z=>cnt_con);

    XOR2_t1: XOR2
        port map (A=>wren_i, B=>rden_i, Z=>fcnt_en);

    INV_1: INV
        port map (A=>rden_i, Z=>rden_i_inv);

    INV_0: INV
        port map (A=>wren_i, Z=>wren_i_inv);

    LUT4_1: ROM16X1
        -- synopsys translate_off
        generic map (initval=> "0x3232")
        -- synopsys translate_on
        port map (AD3=>scuba_vlo, AD2=>cmp_le_1, AD1=>wren_i, 
            AD0=>empty_i, DO0=>empty_d);

    LUT4_0: ROM16X1
        -- synopsys translate_off
        generic map (initval=> "0x3232")
        -- synopsys translate_on
        port map (AD3=>scuba_vlo, AD2=>cmp_ge_d1, AD1=>rden_i, 
            AD0=>full_i, DO0=>full_d);

    AND2_t0: AND2
        port map (A=>scuba_vhi, B=>wren_i, Z=>dec_wre3);

    FF_17: FD1P3DX
        port map (D=>ifcount_0, SP=>fcnt_en, CK=>Clock, CD=>Reset, 
            Q=>fcount_0);

    FF_16: FD1P3DX
        port map (D=>ifcount_1, SP=>fcnt_en, CK=>Clock, CD=>Reset, 
            Q=>fcount_1);

    FF_15: FD1P3DX
        port map (D=>ifcount_2, SP=>fcnt_en, CK=>Clock, CD=>Reset, 
            Q=>fcount_2);

    FF_14: FD1S3BX
        port map (D=>empty_d, CK=>Clock, PD=>Reset, Q=>empty_i);

    FF_13: FD1S3DX
        port map (D=>full_d, CK=>Clock, CD=>Reset, Q=>full_i);

    FF_12: FD1P3DX
        port map (D=>iwcount_0, SP=>wren_i, CK=>Clock, CD=>Reset, 
            Q=>wcount_0);

    FF_11: FD1P3DX
        port map (D=>iwcount_1, SP=>wren_i, CK=>Clock, CD=>Reset, 
            Q=>wcount_1);

    FF_10: FD1P3DX
        port map (D=>iwcount_2, SP=>wren_i, CK=>Clock, CD=>Reset, 
            Q=>wcount_2);

    FF_9: FD1P3DX
        port map (D=>ircount_0, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>rcount_0);

    FF_8: FD1P3DX
        port map (D=>ircount_1, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>rcount_1);

    FF_7: FD1P3DX
        port map (D=>ircount_2, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>rcount_2);

    FF_6: FD1P3DX
        port map (D=>rdataout0, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(0));

    FF_5: FD1P3DX
        port map (D=>rdataout1, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(1));

    FF_4: FD1P3DX
        port map (D=>rdataout2, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(2));

    FF_3: FD1P3DX
        port map (D=>rdataout3, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(3));

    FF_2: FD1P3DX
        port map (D=>rdataout4, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(4));

    FF_1: FD1P3DX
        port map (D=>rdataout5, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(5));

    FF_0: FD1P3DX
        port map (D=>rdataout6, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(6));

    FF_18: FD1P3DX
        port map (D=>rdataout7, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(7));

    bdcnt_bctr_0: CB2
        port map (CI=>cnt_con, PC1=>fcount_1, PC0=>fcount_0, 
            CON=>cnt_con, CO=>co0, NC1=>ifcount_1, NC0=>ifcount_0);

    bdcnt_bctr_1: CB2
        port map (CI=>co0, PC1=>scuba_vlo, PC0=>fcount_2, CON=>cnt_con, 
            CO=>co1, NC1=>open, NC0=>ifcount_2);

    e_cmp_0: ALEB2
        port map (A1=>fcount_1, A0=>fcount_0, B1=>scuba_vlo, B0=>rden_i, 
            CI=>scuba_vhi, LE=>co0_1);

    e_cmp_1: ALEB2
        port map (A1=>scuba_vlo, A0=>fcount_2, B1=>scuba_vlo, 
            B0=>scuba_vlo, CI=>co0_1, LE=>cmp_le_1_c);

    a0: FADD2
        port map (A1=>scuba_vlo, A0=>scuba_vlo, B1=>scuba_vlo, 
            B0=>scuba_vlo, CI=>cmp_le_1_c, COUT1=>open, COUT0=>open, 
            S1=>open, S0=>cmp_le_1);

    g_cmp_0: AGEB2
        port map (A1=>fcount_1, A0=>fcount_0, B1=>wren_i, B0=>wren_i, 
            CI=>scuba_vhi, GE=>co0_2);

    g_cmp_1: AGEB2
        port map (A1=>scuba_vlo, A0=>fcount_2, B1=>scuba_vlo, 
            B0=>wren_i_inv, CI=>co0_2, GE=>cmp_ge_d1);

    w_ctr_0: CU2
        port map (CI=>scuba_vhi, PC1=>wcount_1, PC0=>wcount_0, CO=>co0_3, 
            NC1=>iwcount_1, NC0=>iwcount_0);

    w_ctr_1: CU2
        port map (CI=>co0_3, PC1=>scuba_vlo, PC0=>wcount_2, CO=>co1_1, 
            NC1=>open, NC0=>iwcount_2);

    scuba_vhi_inst: VHI
        port map (Z=>scuba_vhi);

    r_ctr_0: CU2
        port map (CI=>scuba_vhi, PC1=>rcount_1, PC0=>rcount_0, CO=>co0_4, 
            NC1=>ircount_1, NC0=>ircount_0);

    r_ctr_1: CU2
        port map (CI=>co0_4, PC1=>scuba_vlo, PC0=>rcount_2, CO=>co1_2, 
            NC1=>open, NC0=>ircount_2);

    fifo_pfu_0_0: DPR16X2B
        port map (DI0=>Data(6), DI1=>Data(7), WCK=>Clock, WRE=>dec_wre3, 
            RAD0=>rcount_0, RAD1=>rcount_1, RAD2=>scuba_vlo, 
            RAD3=>scuba_vlo, WAD0=>wcount_0, WAD1=>wcount_1, 
            WAD2=>scuba_vlo, WAD3=>scuba_vlo, WDO0=>open, WDO1=>open, 
            RDO0=>rdataout6, RDO1=>rdataout7);

    fifo_pfu_0_1: DPR16X2B
        port map (DI0=>Data(4), DI1=>Data(5), WCK=>Clock, WRE=>dec_wre3, 
            RAD0=>rcount_0, RAD1=>rcount_1, RAD2=>scuba_vlo, 
            RAD3=>scuba_vlo, WAD0=>wcount_0, WAD1=>wcount_1, 
            WAD2=>scuba_vlo, WAD3=>scuba_vlo, WDO0=>open, WDO1=>open, 
            RDO0=>rdataout4, RDO1=>rdataout5);

    fifo_pfu_0_2: DPR16X2B
        port map (DI0=>Data(2), DI1=>Data(3), WCK=>Clock, WRE=>dec_wre3, 
            RAD0=>rcount_0, RAD1=>rcount_1, RAD2=>scuba_vlo, 
            RAD3=>scuba_vlo, WAD0=>wcount_0, WAD1=>wcount_1, 
            WAD2=>scuba_vlo, WAD3=>scuba_vlo, WDO0=>open, WDO1=>open, 
            RDO0=>rdataout2, RDO1=>rdataout3);

    scuba_vlo_inst: VLO
        port map (Z=>scuba_vlo);

    fifo_pfu_0_3: DPR16X2B
        port map (DI0=>Data(0), DI1=>Data(1), WCK=>Clock, WRE=>dec_wre3, 
            RAD0=>rcount_0, RAD1=>rcount_1, RAD2=>scuba_vlo, 
            RAD3=>scuba_vlo, WAD0=>wcount_0, WAD1=>wcount_1, 
            WAD2=>scuba_vlo, WAD3=>scuba_vlo, WDO0=>open, WDO1=>open, 
            RDO0=>rdataout0, RDO1=>rdataout1);

    Empty <= empty_i;
    Full <= full_i;
end Structure;

-- synopsys translate_off
library xp;
configuration Structure_CON of ps2_fifo is
    for Structure
        for all:AGEB2 use entity xp.AGEB2(V); end for;
        for all:ALEB2 use entity xp.ALEB2(V); end for;
        for all:AND2 use entity xp.AND2(V); end for;
        for all:CB2 use entity xp.CB2(V); end for;
        for all:CU2 use entity xp.CU2(V); end for;
        for all:DPR16X2B use entity xp.DPR16X2B(V); end for;
        for all:FADD2 use entity xp.FADD2(V); end for;
        for all:FD1P3DX use entity xp.FD1P3DX(V); end for;
        for all:FD1S3BX use entity xp.FD1S3BX(V); end for;
        for all:FD1S3DX use entity xp.FD1S3DX(V); end for;
        for all:INV use entity xp.INV(V); end for;
        for all:ROM16X1 use entity xp.ROM16X1(V); end for;
        for all:VHI use entity xp.VHI(V); end for;
        for all:VLO use entity xp.VLO(V); end for;
        for all:XOR2 use entity xp.XOR2(V); end for;
    end for;
end Structure_CON;

-- synopsys translate_on
